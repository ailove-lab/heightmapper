{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/leaflet-geocoder-mapzen/dist/leaflet-geocoder-mapzen.js","node_modules/leaflet.locatecontrol/src/L.Control.Locate.js","node_modules/mapzen-scarab/src/scarab.js","src/components/geolocator/geolocator.js","src/components/search/search.js","src/components/utils/anchor-targets.js","src/components/utils/zoom-control.js","src/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","factory","L","define","amd","window","global","throttle","func","wait","options","context","args","result","timeout","previous","later","leading","Date","getTime","apply","now","remaining","this","arguments","clearTimeout","trailing","setTimeout","escapeRegExp","str","replace","MINIMUM_INPUT_LENGTH_FOR_AUTOCOMPLETE","FULL_WIDTH_MARGIN","FULL_WIDTH_TOUCH_ADJUSTED_MARGIN","RESULTS_HEIGHT_MARGIN","API_RATE_LIMIT","Control","Geocoder","extend","version","includes","Mixin","Events","position","attribution","url","placeholder","title","bounds","focus","layers","panToPoint","pointIcon","polygonIcon","fullWidth","markers","expanded","autocomplete","place","initialize","apiKey","XDomainRequest","latlng","console","log","Util","setOptions","reset","_input","value","DomUtil","addClass","_reset","removeMarkers","clearResults","fire","getLayers","params","getBoundingBoxParam","makeParamsFromLeaflet","latLngBounds","getWest","getSouth","getEast","getNorth","_map","getBounds","isValid","isArray","getFocusParam","mapCenter","getCenter","lat","lng","latLng","getParams","api_key","newParams","prop","search","input","text","callPelias","id","ids","handlePlaceResponse","response","maxReqTimestampRendered","endpoint","type","_search","reqStartedAt","AJAX","request","err","results","removeClass","errorMessage","showMessage","requestType","errorCode","geocoding","errors","features","showResults","highlight","RegExp","getIconType","layer","classPrefix","match","resultsContainer","_results","innerHTML","style","display","maxHeight","getSize","y","offsetTop","_container","list","create","j","feature","resultItem","properties","coords","geometry","coordinates","icon","layerIcon","layerIconContainer","src","label","messageEl","appendChild","document","createTextNode","removeLayer","showMarker","setView","getZoom","markerOptions","marker","bindPopup","addLayer","push","openPopup","fitBoundingBox","bbox","fitBounds","animate","maxZoom","setSelectedResult","selected","originalEvent","GeoJSON","coordsToLatLng","innerText","textContent","blur","gid","hasClass","expand","collapse","force","setFullWidth","clearFullWidth","invalidateSize","mapWidth","x","touchAdjustment","Browser","touch","width","parseInt","toString","onAdd","map","container","_body","body","getElementsByTagName","spellcheck","DomEvent","addListener","on","children","stopPropagation","selectedPosition","querySelectorAll","self","shouldPan","_selected","scrollSelectedResultIntoView","_selectedRect","getBoundingClientRect","_resultsRect","bottom","scrollTop","offsetHeight","top","keyCode","target","srcElement","preventDefault","previousItem","highlighted","nextItem","key","which","_lastValue","findParent","parentElement","_scrollWheelZoomEnabled","scrollWheelZoom","enabled","disable","enable","_onMapInteraction","disableClickPropagation","attributionControl","addAttribution","event","onRemove","removeAttribution","control","geocoder","serialize","data","hasOwnProperty","param","JSON","stringify","join","valueOf","encodeURIComponent","http_request","callback","xdr","xhr","XMLHttpRequest","onerror","onreadystatechange","falseFn","error","status","message","statusText","parse","responseText","readyState","onload","paramString","httpRequest","open","constructor","name","setRequestHeader","send","Locate","LocateControl","undefined","keepCurrentZoomLevel","flyTo","clickBehavior","inView","outOfView","returnToPrevBounds","cacheLocation","drawCircle","drawMarker","markerClass","CircleMarker","circleStyle","color","fillColor","fillOpacity","weight","opacity","markerStyle","radius","followCircleStyle","followMarkerStyle","iconLoading","iconElementTag","circlePadding","metric","onLocationError","alert","onLocationOutsideMapBounds","stop","strings","outsideMapBoundsMsg","showPopup","metersUnit","feetUnit","popup","locateOptions","Infinity","watch","_layer","LayerGroup","addTo","_event","_prevBounds","_link","_icon","_onClick","_resetVariables","_unload","_justClicked","_userPanned","_active","behavior","contains","flyToBounds","bind","start","_updateContainerStyle","_activate","_drawMarker","_deactivate","_cleanClasses","_removeMarker","locate","_onLocationFound","_onLocationError","_onDrag","stopLocate","off","_isOutsideMapBounds","panTo","latitude","longitude","padding","accuracy","_isFollowing","_circle","setLatLng","setRadius","setStyle","circle","distance","unit","toFixed","mStyle","_marker","template","_popup","clearLayers","maxBounds","_setClasses","state","removeClasses","addClasses","LDomUtilApplyClassesMethod","method","element","classNames","split","forEach","className","el","names","MapzenScarab","_track","action","nonInteraction","opts","analytics","ga","TRACKING_CATEGORY","_loadAnalytics","g","m","q","createElement","async","parentNode","insertBefore","ANALYTICS_PROPERTY_ID","_popupWindow","w","h","dualScreenLeft","screenLeft","screen","left","dualScreenTop","screenTop","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","newWindow","_buildTwitterLink","base","location","href","tweet","_buildFacebookLink","_createElsAndAppend","mapzenLink","link","DEFAULT_LINK","mapzenTitle","setAttribute","mapzenEl","_createButtonEl","_onClickMapzen","twitterEl","_onClickTwitter","facebookEl","_onClickFacebook","repo","githubEl","_onClickGitHub","description","infoEl","_createInfoButton","_onClickInfo","clickHandler","infoButton","infoLogo","addEventListener","linkHref","linkTitle","linkEl","logoEl","elem","infoDescriptionEl","_buildDescription","infoBox","offsetWidth","marginLeft","resizeDescription","containerWidth","centerScarab","offsetMargin","querySelector","rebuildLinks","onhashchange","prototype","hide","show","init","locator","follow","childNodes","getViewportWidth","checkResize","previousWidth","isListening","DEMO_API_KEY","geocoderOptions","sources","anchors","debug","DEBUG","isProbablyTouchscreen","mapRef","Modernizr","zoomControl","insertStylesheet","cssText","firstStylesheet","head","styleEl","styleSheet","css","Bug","geolocator","anchorTargets","MPZN","citysearch","Utils","bug","leafletMap","HTMLElement"],"mappings":"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","file":"mapzen-ui.min.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","/*\n * leaflet-geocoder-mapzen\n * Leaflet plugin to search (geocode) using Mapzen Search or your\n * own hosted version of the Pelias Geocoder API.\n *\n * License: MIT\n * (c) Mapzen\n */\n;(function (factory) { // eslint-disable-line no-extra-semi\n  var L;\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['leaflet'], factory);\n  } else if (typeof module !== 'undefined') {\n    // Node/CommonJS\n    L = (typeof window !== \"undefined\" ? window['L'] : typeof global !== \"undefined\" ? global['L'] : null);\n    module.exports = factory(L);\n  } else {\n    // Browser globals\n    if (typeof window.L === 'undefined') {\n      throw new Error('Leaflet must be loaded first');\n    }\n    factory(window.L);\n  }\n}(function (L) {\n  'use strict';\n\n  var MINIMUM_INPUT_LENGTH_FOR_AUTOCOMPLETE = 1;\n  var FULL_WIDTH_MARGIN = 20; // in pixels\n  var FULL_WIDTH_TOUCH_ADJUSTED_MARGIN = 4; // in pixels\n  var RESULTS_HEIGHT_MARGIN = 20; // in pixels\n  var API_RATE_LIMIT = 250; // in ms, throttled time between subsequent requests to API\n\n  L.Control.Geocoder = L.Control.extend({\n\n    version: '1.7.1',\n\n    includes: L.Mixin.Events,\n\n    options: {\n      position: 'topleft',\n      attribution: 'Geocoding by <a href=\"https://mapzen.com/projects/search/\">Mapzen</a>',\n      url: 'https://search.mapzen.com/v1',\n      placeholder: 'Search',\n      title: 'Search',\n      bounds: false,\n      focus: true,\n      layers: null,\n      panToPoint: true,\n      pointIcon: true, // 'images/point_icon.png',\n      polygonIcon: true, // 'images/polygon_icon.png',\n      fullWidth: 650,\n      markers: true,\n      expanded: false,\n      autocomplete: true,\n      place: false\n    },\n\n    initialize: function (apiKey, options) {\n      // For IE8 compatibility (if XDomainRequest is present),\n      // we set the default value of options.url to the protocol-relative\n      // version, because XDomainRequest does not allow http-to-https requests\n      // This is set first so it can always be overridden by the user\n      if (window.XDomainRequest) {\n        this.options.url = '//search.mapzen.com/v1';\n      }\n\n      // If the apiKey is omitted entirely and the\n      // first parameter is actually the options\n      if (typeof apiKey === 'object' && !!apiKey) {\n        options = apiKey;\n      } else {\n        this.apiKey = apiKey;\n      }\n\n      // Deprecation warnings\n      // If options.latlng is defined, warn. (Do not check for falsy values, because it can be set to false.)\n      if (options && typeof options.latlng !== 'undefined') {\n        // Set user-specified latlng to focus option, but don't overwrite if it's already there\n        if (typeof options.focus === 'undefined') {\n          options.focus = options.latlng;\n        }\n        console.log('[leaflet-geocoder-mapzen] DEPRECATION WARNING:',\n          'As of v1.6.0, the `latlng` option is deprecated. It has been renamed to `focus`. `latlng` will be removed in a future version.');\n      }\n\n      // Now merge user-specified options\n      L.Util.setOptions(this, options);\n      this.markers = [];\n    },\n\n    /**\n     * Resets the geocoder control to an empty state.\n     *\n     * @public\n     */\n    reset: function () {\n      this._input.value = '';\n      L.DomUtil.addClass(this._reset, 'leaflet-pelias-hidden');\n      this.removeMarkers();\n      this.clearResults();\n      this.fire('reset');\n    },\n\n    getLayers: function (params) {\n      var layers = this.options.layers;\n\n      if (!layers) {\n        return params;\n      }\n\n      params.layers = layers;\n      return params;\n    },\n\n    getBoundingBoxParam: function (params) {\n      /*\n       * this.options.bounds can be one of the following\n       * true //Boolean - take the map bounds\n       * false //Boolean - no bounds\n       * L.latLngBounds(...) //Object\n       * [[10, 10], [40, 60]] //Array\n      */\n      var bounds = this.options.bounds;\n\n      // If falsy, bail\n      if (!bounds) {\n        return params;\n      }\n\n      // If set to true, use map bounds\n      // If it is a valid L.LatLngBounds object, get its values\n      // If it is an array, try running it through L.LatLngBounds\n      if (bounds === true) {\n        bounds = this._map.getBounds();\n        params = makeParamsFromLeaflet(params, bounds);\n      } else if (typeof bounds === 'object' && bounds.isValid && bounds.isValid()) {\n        params = makeParamsFromLeaflet(params, bounds);\n      } else if (L.Util.isArray(bounds)) {\n        var latLngBounds = L.latLngBounds(bounds);\n        if (latLngBounds.isValid && latLngBounds.isValid()) {\n          params = makeParamsFromLeaflet(params, latLngBounds);\n        }\n      }\n\n      function makeParamsFromLeaflet (params, latLngBounds) {\n        params['boundary.rect.min_lon'] = latLngBounds.getWest();\n        params['boundary.rect.min_lat'] = latLngBounds.getSouth();\n        params['boundary.rect.max_lon'] = latLngBounds.getEast();\n        params['boundary.rect.max_lat'] = latLngBounds.getNorth();\n        return params;\n      }\n\n      return params;\n    },\n\n    getFocusParam: function (params) {\n      /**\n       * this.options.focus can be one of the following\n       * [50, 30]           // Array\n       * {lon: 30, lat: 50} // Object\n       * {lat: 50, lng: 30} // Object\n       * L.latLng(50, 30)   // Object\n       * true               // Boolean - take the map center\n       * false              // Boolean - No latlng to be considered\n       */\n      var focus = this.options.focus;\n\n      if (!focus) {\n        return params;\n      }\n\n      if (focus === true) {\n        // If focus option is Boolean true, use current map center\n        var mapCenter = this._map.getCenter();\n        params['focus.point.lat'] = mapCenter.lat;\n        params['focus.point.lon'] = mapCenter.lng;\n      } else if (typeof focus === 'object') {\n        // Accepts array, object and L.latLng form\n        // Constructs the latlng object using Leaflet's L.latLng()\n        // [50, 30]\n        // {lon: 30, lat: 50}\n        // {lat: 50, lng: 30}\n        // L.latLng(50, 30)\n        var latlng = L.latLng(focus);\n        params['focus.point.lat'] = latlng.lat;\n        params['focus.point.lon'] = latlng.lng;\n      }\n\n      return params;\n    },\n\n    // @method getParams(params: Object)\n    // Collects all the parameters in a single object from various options,\n    // including options.bounds, options.focus, options.layers, the api key,\n    // and any params that are provided as a argument to this function.\n    // Note that options.params will overwrite any of these\n    getParams: function (params) {\n      params = params || {};\n      params = this.getBoundingBoxParam(params);\n      params = this.getFocusParam(params);\n      params = this.getLayers(params);\n\n      // Search API key\n      if (this.apiKey) {\n        params.api_key = this.apiKey;\n      }\n\n      var newParams = this.options.params;\n\n      if (!newParams) {\n        return params;\n      }\n\n      if (typeof newParams === 'object') {\n        for (var prop in newParams) {\n          params[prop] = newParams[prop];\n        }\n      }\n\n      return params;\n    },\n\n    search: function (input) {\n      // Prevent lack of input from sending a malformed query to Pelias\n      if (!input) return;\n\n      var url = this.options.url + '/search';\n      var params = {\n        text: input\n      };\n\n      this.callPelias(url, params, 'search');\n    },\n\n    autocomplete: throttle(function (input) {\n      // Prevent lack of input from sending a malformed query to Pelias\n      if (!input) return;\n\n      var url = this.options.url + '/autocomplete';\n      var params = {\n        text: input\n      };\n\n      this.callPelias(url, params, 'autocomplete');\n    }, API_RATE_LIMIT),\n\n    place: function (id) {\n      // Prevent lack of input from sending a malformed query to Pelias\n      if (!id) return;\n\n      var url = this.options.url + '/place';\n      var params = {\n        ids: id\n      };\n\n      this.callPelias(url, params, 'place');\n    },\n\n    handlePlaceResponse: function (response) {\n      // Placeholder for handling place response\n    },\n\n    // Timestamp of the last response which was successfully rendered to the UI.\n    // The time represents when the request was *sent*, not when it was recieved.\n    maxReqTimestampRendered: new Date().getTime(),\n\n    callPelias: function (endpoint, params, type) {\n      params = this.getParams(params);\n\n      L.DomUtil.addClass(this._search, 'leaflet-pelias-loading');\n\n      // Track when the request began\n      var reqStartedAt = new Date().getTime();\n\n      AJAX.request(endpoint, params, function (err, results) {\n        L.DomUtil.removeClass(this._search, 'leaflet-pelias-loading');\n\n        if (err) {\n          var errorMessage;\n          switch (err.code) {\n            // Error codes.\n            // https://mapzen.com/documentation/search/http-status-codes/\n            case 403:\n              errorMessage = 'A valid API key is needed for this search feature.';\n              break;\n            case 404:\n              errorMessage = 'The search service cannot be found. :-(';\n              break;\n            case 408:\n              errorMessage = 'The search service took too long to respond. Try again in a second.';\n              break;\n            case 429:\n              errorMessage = 'There were too many requests. Try again in a second.';\n              break;\n            case 500:\n              errorMessage = 'The search service is not working right now. Please try again later.';\n              break;\n            case 502:\n              errorMessage = 'Connection lost. Please try again later.';\n              break;\n            // Note the status code is 0 if CORS is not enabled on the error response\n            default:\n              errorMessage = 'The search service is having problems :-(';\n              break;\n          }\n          this.showMessage(errorMessage);\n          this.fire('error', {\n            results: results,\n            endpoint: endpoint,\n            requestType: type,\n            params: params,\n            errorCode: err.code,\n            errorMessage: errorMessage\n          });\n        }\n\n        // There might be an error message from the geocoding service itself\n        if (results && results.geocoding && results.geocoding.errors) {\n          errorMessage = results.geocoding.errors[0];\n          this.showMessage(errorMessage);\n          this.fire('error', {\n            results: results,\n            endpoint: endpoint,\n            requestType: type,\n            params: params,\n            errorCode: err.code,\n            errorMessage: errorMessage\n          });\n          return;\n        }\n\n        // Autocomplete and search responses\n        if (results && results.features) {\n          // Check if request is stale:\n          // Only for autocomplete or search endpoints\n          // Ignore requests if input is currently blank\n          // Ignore requests that started before a request which has already\n          // been successfully rendered on to the UI.\n          if (type === 'autocomplete' || type === 'search') {\n            if (this._input.value === '' || this.maxReqTimestampRendered >= reqStartedAt) {\n              return;\n            } else {\n              // Record the timestamp of the request.\n              this.maxReqTimestampRendered = reqStartedAt;\n            }\n          }\n\n          // Placeholder: handle place response\n          if (type === 'place') {\n            this.handlePlaceResponse(results);\n          }\n\n          // Show results\n          if (type === 'autocomplete' || type === 'search') {\n            this.showResults(results.features, params.text);\n          }\n\n          // Fire event\n          this.fire('results', {\n            results: results,\n            endpoint: endpoint,\n            requestType: type,\n            params: params\n          });\n        }\n      }, this);\n    },\n\n    highlight: function (text, focus) {\n      var r = RegExp('(' + escapeRegExp(focus) + ')', 'gi');\n      return text.replace(r, '<strong>$1</strong>');\n    },\n\n    getIconType: function (layer) {\n      var pointIcon = this.options.pointIcon;\n      var polygonIcon = this.options.polygonIcon;\n      var classPrefix = 'leaflet-pelias-layer-icon-';\n\n      if (layer.match('venue') || layer.match('address')) {\n        if (pointIcon === true) {\n          return {\n            type: 'class',\n            value: classPrefix + 'point'\n          };\n        } else if (pointIcon === false) {\n          return false;\n        } else {\n          return {\n            type: 'image',\n            value: pointIcon\n          };\n        }\n      } else {\n        if (polygonIcon === true) {\n          return {\n            type: 'class',\n            value: classPrefix + 'polygon'\n          };\n        } else if (polygonIcon === false) {\n          return false;\n        } else {\n          return {\n            type: 'image',\n            value: polygonIcon\n          };\n        }\n      }\n    },\n\n    showResults: function (features, input) {\n      // Exit function if there are no features\n      if (features.length === 0) {\n        this.showMessage('No results were found.');\n        return;\n      }\n\n      var resultsContainer = this._results;\n\n      // Reset and display results container\n      resultsContainer.innerHTML = '';\n      resultsContainer.style.display = 'block';\n      // manage result box height\n      resultsContainer.style.maxHeight = (this._map.getSize().y - resultsContainer.offsetTop - this._container.offsetTop - RESULTS_HEIGHT_MARGIN) + 'px';\n\n      var list = L.DomUtil.create('ul', 'leaflet-pelias-list', resultsContainer);\n\n      for (var i = 0, j = features.length; i < j; i++) {\n        var feature = features[i];\n        var resultItem = L.DomUtil.create('li', 'leaflet-pelias-result', list);\n\n        resultItem.feature = feature;\n        resultItem.layer = feature.properties.layer;\n\n        // Deprecated\n        // Use L.GeoJSON.coordsToLatLng(resultItem.feature.geometry.coordinates) instead\n        // This returns a L.LatLng object that can be used throughout Leaflet\n        resultItem.coords = feature.geometry.coordinates;\n\n        var icon = this.getIconType(feature.properties.layer);\n        if (icon) {\n          // Point or polygon icon\n          // May be a class or an image path\n          var layerIconContainer = L.DomUtil.create('span', 'leaflet-pelias-layer-icon-container', resultItem);\n          var layerIcon;\n\n          if (icon.type === 'class') {\n            layerIcon = L.DomUtil.create('div', 'leaflet-pelias-layer-icon ' + icon.value, layerIconContainer);\n          } else {\n            layerIcon = L.DomUtil.create('img', 'leaflet-pelias-layer-icon', layerIconContainer);\n            layerIcon.src = icon.value;\n          }\n\n          layerIcon.title = 'layer: ' + feature.properties.layer;\n        }\n\n        resultItem.innerHTML += this.highlight(feature.properties.label, input);\n      }\n    },\n\n    showMessage: function (text) {\n      var resultsContainer = this._results;\n\n      // Reset and display results container\n      resultsContainer.innerHTML = '';\n      resultsContainer.style.display = 'block';\n\n      var messageEl = L.DomUtil.create('div', 'leaflet-pelias-message', resultsContainer);\n\n      // Set text. This is the most cross-browser compatible method\n      // and avoids the issues we have detecting either innerText vs textContent\n      // (e.g. Firefox cannot detect textContent property on elements, but it's there)\n      messageEl.appendChild(document.createTextNode(text));\n    },\n\n    removeMarkers: function () {\n      if (this.options.markers) {\n        for (var i = 0; i < this.markers.length; i++) {\n          this._map.removeLayer(this.markers[i]);\n        }\n        this.markers = [];\n      }\n    },\n\n    showMarker: function (text, latlng) {\n      this._map.setView(latlng, this._map.getZoom() || 8);\n\n      var markerOptions = (typeof this.options.markers === 'object') ? this.options.markers : {};\n\n      if (this.options.markers) {\n        var marker = new L.marker(latlng, markerOptions).bindPopup(text); // eslint-disable-line new-cap\n        this._map.addLayer(marker);\n        this.markers.push(marker);\n        marker.openPopup();\n      }\n    },\n\n    /**\n     * Fits the map view to a given bounding box.\n     * Mapzen Search / Pelias returns the 'bbox' property on 'feature'. It is\n     * as an array of four numbers:\n     *   [\n     *     0: southwest longitude,\n     *     1: southwest latitude,\n     *     2: northeast longitude,\n     *     3: northeast latitude\n     *   ]\n     * This method expects the array to be passed directly and it will be converted\n     * to a boundary parameter for Leaflet's fitBounds().\n     */\n    fitBoundingBox: function (bbox) {\n      this._map.fitBounds([\n        [ bbox[1], bbox[0] ],\n        [ bbox[3], bbox[2] ]\n      ], {\n        animate: true,\n        maxZoom: 16\n      });\n    },\n\n    setSelectedResult: function (selected, originalEvent) {\n      var latlng = L.GeoJSON.coordsToLatLng(selected.feature.geometry.coordinates);\n      this._input.value = selected.innerText || selected.textContent;\n      if (selected.feature.bbox) {\n        this.removeMarkers();\n        this.fitBoundingBox(selected.feature.bbox);\n      } else {\n        this.removeMarkers();\n        this.showMarker(selected.innerHTML, latlng);\n      }\n      this.fire('select', {\n        originalEvent: originalEvent,\n        latlng: latlng,\n        feature: selected.feature\n      });\n      this.blur();\n\n      if (this.options.place) {\n        this.place(selected.feature.properties.gid);\n      }\n    },\n\n    /**\n     * Convenience function for focusing on the input\n     * A `focus` event is fired, but it is not fired here. An event listener\n     * was added to the _input element to forward the native `focus` event.\n     *\n     * @public\n     */\n    focus: function () {\n      // If not expanded, expand this first\n      if (!L.DomUtil.hasClass(this._container, 'leaflet-pelias-expanded')) {\n        this.expand();\n      }\n      this._input.focus();\n    },\n\n    /**\n     * Removes focus from geocoder control\n     * A `blur` event is fired, but it is not fired here. An event listener\n     * was added on the _input element to forward the native `blur` event.\n     *\n     * @public\n     */\n    blur: function () {\n      this._input.blur();\n      this.clearResults();\n      if (this._input.value === '' && this._results.style.display !== 'none') {\n        L.DomUtil.addClass(this._reset, 'leaflet-pelias-hidden');\n        if (!this.options.expanded) {\n          this.collapse();\n        }\n      }\n    },\n\n    clearResults: function (force) {\n      // Hide results from view\n      this._results.style.display = 'none';\n\n      // Destroy contents if input has also cleared\n      // OR if force is true\n      if (this._input.value === '' || force === true) {\n        this._results.innerHTML = '';\n      }\n    },\n\n    expand: function () {\n      L.DomUtil.addClass(this._container, 'leaflet-pelias-expanded');\n      this.setFullWidth();\n      this.fire('expand');\n    },\n\n    collapse: function () {\n      // 'expanded' options check happens outside of this function now\n      // So it's now possible for a script to force-collapse a geocoder\n      // that otherwise defaults to the always-expanded state\n      L.DomUtil.removeClass(this._container, 'leaflet-pelias-expanded');\n      this._input.blur();\n      this.clearFullWidth();\n      this.clearResults();\n      this.fire('collapse');\n    },\n\n    // Set full width of expanded input, if enabled\n    setFullWidth: function () {\n      if (this.options.fullWidth) {\n        // If fullWidth setting is a number, only expand if map container\n        // is smaller than that breakpoint. Otherwise, clear width\n        // Always ask map to invalidate and recalculate size first\n        this._map.invalidateSize();\n        var mapWidth = this._map.getSize().x;\n        var touchAdjustment = L.Browser.touch ? FULL_WIDTH_TOUCH_ADJUSTED_MARGIN : 0;\n        var width = mapWidth - FULL_WIDTH_MARGIN - touchAdjustment;\n        if (typeof this.options.fullWidth === 'number' && mapWidth >= window.parseInt(this.options.fullWidth, 10)) {\n          this.clearFullWidth();\n          return;\n        }\n        this._container.style.width = width.toString() + 'px';\n      }\n    },\n\n    clearFullWidth: function () {\n      // Clear set width, if any\n      if (this.options.fullWidth) {\n        this._container.style.width = '';\n      }\n    },\n\n    onAdd: function (map) {\n      var container = L.DomUtil.create('div',\n          'leaflet-pelias-control leaflet-bar leaflet-control');\n\n      this._body = document.body || document.getElementsByTagName('body')[0];\n      this._container = container;\n      this._input = L.DomUtil.create('input', 'leaflet-pelias-input', this._container);\n      this._input.spellcheck = false;\n\n      // Forwards focus and blur events from input to geocoder\n      L.DomEvent.addListener(this._input, 'focus', function (e) {\n        this.fire('focus', { originalEvent: e });\n      }, this);\n\n      L.DomEvent.addListener(this._input, 'blur', function (e) {\n        this.fire('blur', { originalEvent: e });\n      }, this);\n\n      // Only set if title option is not null or falsy\n      if (this.options.title) {\n        this._input.title = this.options.title;\n      }\n\n      // Only set if placeholder option is not null or falsy\n      if (this.options.placeholder) {\n        this._input.placeholder = this.options.placeholder;\n      }\n\n      this._search = L.DomUtil.create('a', 'leaflet-pelias-search-icon', this._container);\n      this._reset = L.DomUtil.create('div', 'leaflet-pelias-close leaflet-pelias-hidden', this._container);\n      this._reset.innerHTML = '×';\n      this._reset.title = 'Reset';\n\n      this._results = L.DomUtil.create('div', 'leaflet-pelias-results leaflet-bar', this._container);\n\n      if (this.options.expanded) {\n        this.expand();\n      }\n\n      L.DomEvent\n        .on(this._container, 'click', function (e) {\n          // Child elements with 'click' listeners should call\n          // stopPropagation() to prevent that event from bubbling to\n          // the container & causing it to fire too greedily\n          this._input.focus();\n        }, this)\n        .on(this._input, 'focus', function (e) {\n          if (this._input.value && this._results.children.length) {\n            this._results.style.display = 'block';\n          }\n        }, this)\n        .on(this._map, 'click', function (e) {\n          // Does what you might expect a _input.blur() listener might do,\n          // but since that would fire for any reason (e.g. clicking a result)\n          // what you really want is to blur from the control by listening to clicks on the map\n          this.blur();\n        }, this)\n        .on(this._search, 'click', function (e) {\n          L.DomEvent.stopPropagation(e);\n\n          // Toggles expanded state of container on click of search icon\n          if (L.DomUtil.hasClass(this._container, 'leaflet-pelias-expanded')) {\n            // If expanded option is true, just focus the input\n            if (this.options.expanded === true) {\n              this._input.focus();\n              return;\n            } else {\n              // Otherwise, toggle to hidden state\n              L.DomUtil.addClass(this._reset, 'leaflet-pelias-hidden');\n              this.collapse();\n            }\n          } else {\n            // If not currently expanded, clicking here always expands it\n            if (this._input.value.length > 0) {\n              L.DomUtil.removeClass(this._reset, 'leaflet-pelias-hidden');\n            }\n            this.expand();\n            this._input.focus();\n          }\n        }, this)\n        .on(this._reset, 'click', function (e) {\n          this.reset();\n          this._input.focus();\n          L.DomEvent.stopPropagation(e);\n        }, this)\n        .on(this._input, 'keydown', function (e) {\n          var list = this._results.querySelectorAll('.leaflet-pelias-result');\n          var selected = this._results.querySelectorAll('.leaflet-pelias-selected')[0];\n          var selectedPosition;\n          var self = this;\n          var panToPoint = function (shouldPan) {\n            var _selected = self._results.querySelectorAll('.leaflet-pelias-selected')[0];\n            if (_selected && shouldPan) {\n              if (_selected.feature.bbox) {\n                self.removeMarkers();\n                self.fitBoundingBox(_selected.feature.bbox);\n              } else {\n                self.removeMarkers();\n                self.showMarker(_selected.innerHTML, L.GeoJSON.coordsToLatLng(_selected.feature.geometry.coordinates));\n              }\n            }\n          };\n\n          var scrollSelectedResultIntoView = function () {\n            var _selected = self._results.querySelectorAll('.leaflet-pelias-selected')[0];\n            var _selectedRect = _selected.getBoundingClientRect();\n            var _resultsRect = self._results.getBoundingClientRect();\n            // Is the selected element not visible?\n            if (_selectedRect.bottom > _resultsRect.bottom) {\n              self._results.scrollTop = _selected.offsetTop + _selected.offsetHeight - self._results.offsetHeight;\n            } else if (_selectedRect.top < _resultsRect.top) {\n              self._results.scrollTop = _selected.offsetTop;\n            }\n          };\n\n          for (var i = 0; i < list.length; i++) {\n            if (list[i] === selected) {\n              selectedPosition = i;\n              break;\n            }\n          }\n\n          // TODO cleanup\n          switch (e.keyCode) {\n            // 13 = enter\n            case 13:\n              if (selected) {\n                this.setSelectedResult(selected, e);\n              } else {\n                // perform a full text search on enter\n                var text = (e.target || e.srcElement).value;\n                this.search(text);\n              }\n              L.DomEvent.preventDefault(e);\n              break;\n            // 38 = up arrow\n            case 38:\n              // Ignore key if there are no results or if list is not visible\n              if (list.length === 0 || this._results.style.display === 'none') {\n                return;\n              }\n\n              if (selected) {\n                L.DomUtil.removeClass(selected, 'leaflet-pelias-selected');\n              }\n\n              var previousItem = list[selectedPosition - 1];\n              var highlighted = (selected && previousItem) ? previousItem : list[list.length - 1]; // eslint-disable-line no-redeclare\n\n              L.DomUtil.addClass(highlighted, 'leaflet-pelias-selected');\n              scrollSelectedResultIntoView();\n              panToPoint(this.options.panToPoint);\n              this.fire('highlight', {\n                originalEvent: e,\n                latlng: L.GeoJSON.coordsToLatLng(highlighted.feature.geometry.coordinates),\n                feature: highlighted.feature\n              });\n\n              L.DomEvent.preventDefault(e);\n              break;\n            // 40 = down arrow\n            case 40:\n              // Ignore key if there are no results or if list is not visible\n              if (list.length === 0 || this._results.style.display === 'none') {\n                return;\n              }\n\n              if (selected) {\n                L.DomUtil.removeClass(selected, 'leaflet-pelias-selected');\n              }\n\n              var nextItem = list[selectedPosition + 1];\n              var highlighted = (selected && nextItem) ? nextItem : list[0]; // eslint-disable-line no-redeclare\n\n              L.DomUtil.addClass(highlighted, 'leaflet-pelias-selected');\n              scrollSelectedResultIntoView();\n              panToPoint(this.options.panToPoint);\n              this.fire('highlight', {\n                originalEvent: e,\n                latlng: L.GeoJSON.coordsToLatLng(highlighted.feature.geometry.coordinates),\n                feature: highlighted.feature\n              });\n\n              L.DomEvent.preventDefault(e);\n              break;\n            // all other keys\n            default:\n              break;\n          }\n        }, this)\n        .on(this._input, 'keyup', function (e) {\n          var key = e.which || e.keyCode;\n          var text = (e.target || e.srcElement).value;\n\n          if (text.length > 0) {\n            L.DomUtil.removeClass(this._reset, 'leaflet-pelias-hidden');\n          } else {\n            L.DomUtil.addClass(this._reset, 'leaflet-pelias-hidden');\n          }\n\n          // Ignore all further action if the keycode matches an arrow\n          // key (handled via keydown event)\n          if (key === 13 || key === 38 || key === 40) {\n            return;\n          }\n\n          // keyCode 27 = esc key (esc should clear results)\n          if (key === 27) {\n            // If input is blank or results have already been cleared\n            // (perhaps due to a previous 'esc') then pressing esc at\n            // this point will blur from input as well.\n            if (text.length === 0 || this._results.style.display === 'none') {\n              this._input.blur();\n\n              if (!this.options.expanded && L.DomUtil.hasClass(this._container, 'leaflet-pelias-expanded')) {\n                this.collapse();\n              }\n            }\n\n            // Clears results\n            this.clearResults(true);\n            L.DomUtil.removeClass(this._search, 'leaflet-pelias-loading');\n            return;\n          }\n\n          if (text !== this._lastValue) {\n            this._lastValue = text;\n\n            if (text.length >= MINIMUM_INPUT_LENGTH_FOR_AUTOCOMPLETE && this.options.autocomplete === true) {\n              this.autocomplete(text);\n            } else {\n              this.clearResults(true);\n            }\n          }\n        }, this)\n        .on(this._results, 'click', function (e) {\n          L.DomEvent.preventDefault(e);\n          L.DomEvent.stopPropagation(e);\n\n          var _selected = this._results.querySelectorAll('.leaflet-pelias-selected')[0];\n          if (_selected) {\n            L.DomUtil.removeClass(_selected, 'leaflet-pelias-selected');\n          }\n\n          var selected = e.target || e.srcElement; /* IE8 */\n          var findParent = function () {\n            if (!L.DomUtil.hasClass(selected, 'leaflet-pelias-result')) {\n              selected = selected.parentElement;\n              if (selected) {\n                findParent();\n              }\n            }\n            return selected;\n          };\n\n          // click event can be registered on the child nodes\n          // that does not have the required coords prop\n          // so its important to find the parent.\n          findParent();\n\n          // If nothing is selected, (e.g. it's a message, not a result),\n          // do nothing.\n          if (selected) {\n            L.DomUtil.addClass(selected, 'leaflet-pelias-selected');\n            this.setSelectedResult(selected, e);\n          }\n        }, this)\n        .on(this._results, 'mouseover', function (e) {\n          // Prevent scrolling over results list from zooming the map, if enabled\n          this._scrollWheelZoomEnabled = map.scrollWheelZoom.enabled();\n          if (this._scrollWheelZoomEnabled) {\n            map.scrollWheelZoom.disable();\n          }\n        }, this)\n        .on(this._results, 'mouseout', function (e) {\n          // Re-enable scroll wheel zoom (if previously enabled) after\n          // leaving the results box\n          if (this._scrollWheelZoomEnabled) {\n            map.scrollWheelZoom.enable();\n          }\n        }, this);\n\n      // Recalculate width of the input bar when window resizes\n      if (this.options.fullWidth) {\n        L.DomEvent.on(window, 'resize', function (e) {\n          if (L.DomUtil.hasClass(this._container, 'leaflet-pelias-expanded')) {\n            this.setFullWidth();\n          }\n        }, this);\n      }\n\n      L.DomEvent.on(this._map, 'mousedown', this._onMapInteraction, this);\n      L.DomEvent.on(this._map, 'touchstart', this._onMapInteraction, this);\n\n      L.DomEvent.disableClickPropagation(this._container);\n      if (map.attributionControl) {\n        map.attributionControl.addAttribution(this.options.attribution);\n      }\n      return container;\n    },\n\n    _onMapInteraction: function (event) {\n      this.blur();\n\n      // Only collapse if the input is clear, and is currently expanded.\n      // Disabled if expanded is set to true\n      if (!this.options.expanded) {\n        if (!this._input.value && L.DomUtil.hasClass(this._container, 'leaflet-pelias-expanded')) {\n          this.collapse();\n        }\n      }\n    },\n\n    onRemove: function (map) {\n      map.attributionControl.removeAttribution(this.options.attribution);\n    }\n  });\n\n  L.control.geocoder = function (apiKey, options) {\n    return new L.Control.Geocoder(apiKey, options);\n  };\n\n  /*\n   * AJAX Utility function (implements basic HTTP get)\n   */\n  var AJAX = {\n    serialize: function (params) {\n      var data = '';\n\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          var param = params[key];\n          var type = param.toString();\n          var value;\n\n          if (data.length) {\n            data += '&';\n          }\n\n          switch (type) {\n            case '[object Array]':\n              value = (param[0].toString() === '[object Object]') ? JSON.stringify(param) : param.join(',');\n              break;\n            case '[object Object]':\n              value = JSON.stringify(param);\n              break;\n            case '[object Date]':\n              value = param.valueOf();\n              break;\n            default:\n              value = param;\n              break;\n          }\n\n          data += encodeURIComponent(key) + '=' + encodeURIComponent(value);\n        }\n      }\n\n      return data;\n    },\n    http_request: function (callback, context) {\n      if (window.XDomainRequest) {\n        return this.xdr(callback, context);\n      } else {\n        return this.xhr(callback, context);\n      }\n    },\n    xhr: function (callback, context) {\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = function (e) {\n        xhr.onreadystatechange = L.Util.falseFn;\n        var error = {\n          code: xhr.status,\n          message: xhr.statusText\n        };\n\n        callback.call(context, error, null);\n      };\n\n      xhr.onreadystatechange = function () {\n        var response;\n        var error;\n\n        try {\n          response = JSON.parse(xhr.responseText);\n        } catch (e) {\n          response = null;\n          error = {\n            code: 500,\n            message: 'Parse Error'\n          };\n        }\n\n        if (xhr.readyState === 4) {\n          // Handle all non-200 responses first\n          if (xhr.status !== 200) {\n            error = {\n              code: xhr.status,\n              message: xhr.statusText\n            };\n            callback.call(context, error, response);\n          } else {\n            if (!error && response.error) {\n              error = response.error;\n            }\n\n            xhr.onerror = L.Util.falseFn;\n\n            callback.call(context, error, response);\n          }\n        }\n      };\n\n      return xhr;\n    },\n    xdr: function (callback, context) {\n      var xdr = new window.XDomainRequest();\n\n      xdr.onerror = function (e) {\n        xdr.onload = L.Util.falseFn;\n\n        // XDRs have no access to actual status codes\n        var error = {\n          code: 500,\n          message: 'XMLHttpRequest Error'\n        };\n        callback.call(context, error, null);\n      };\n\n      // XDRs have .onload instead of .onreadystatechange\n      xdr.onload = function () {\n        var response;\n        var error;\n\n        try {\n          response = JSON.parse(xdr.responseText);\n        } catch (e) {\n          response = null;\n          error = {\n            code: 500,\n            message: 'Parse Error'\n          };\n        }\n\n        if (!error && response.error) {\n          error = response.error;\n          response = null;\n        }\n\n        xdr.onerror = L.Util.falseFn;\n        callback.call(context, error, response);\n      };\n\n      return xdr;\n    },\n    request: function (url, params, callback, context) {\n      var paramString = this.serialize(params);\n      var httpRequest = this.http_request(callback, context);\n\n      httpRequest.open('GET', url + '?' + paramString);\n      if (httpRequest.constructor.name === 'XMLHttpRequest') {\n        httpRequest.setRequestHeader('Accept', 'application/json');\n      }\n\n      setTimeout(function () {\n        httpRequest.send(null);\n      }, 0);\n    }\n  };\n\n  /*\n   * throttle Utility function (borrowed from underscore)\n   */\n  function throttle (func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function () {\n      previous = options.leading === false ? 0 : new Date().getTime();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function () {\n      var now = new Date().getTime();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  }\n\n  /*\n   * escaping a string for regex Utility function\n   * from https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\n   */\n  function escapeRegExp (str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n  }\n}));\n","/*!\nCopyright (c) 2016 Dominik Moritz\n\nThis file is part of the leaflet locate control. It is licensed under the MIT license.\nYou can find the project at: https://github.com/domoritz/leaflet-locatecontrol\n*/\n(function (factory, window) {\n     // see https://github.com/Leaflet/Leaflet/blob/master/PLUGIN-GUIDE.md#module-loaders\n     // for details on how to structure a leaflet plugin.\n\n    // define an AMD module that relies on 'leaflet'\n    if (typeof define === 'function' && define.amd) {\n        define(['leaflet'], factory);\n\n    // define a Common JS module that relies on 'leaflet'\n    } else if (typeof exports === 'object') {\n        if (typeof window !== 'undefined' && window.L) {\n            module.exports = factory(L);\n        } else {\n            module.exports = factory((typeof window !== \"undefined\" ? window['L'] : typeof global !== \"undefined\" ? global['L'] : null));\n        }\n    }\n\n    // attach your plugin to the global 'L' variable\n    if (typeof window !== 'undefined' && window.L){\n        window.L.Control.Locate = factory(L);\n    }\n} (function (L) {\n    var LocateControl = L.Control.extend({\n        options: {\n            /** Position of the control */\n            position: 'topleft',\n            /** The layer that the user's location should be drawn on. By default creates a new layer. */\n            layer: undefined,\n            /**\n             * Automatically sets the map view (zoom and pan) to the user's location as it updates.\n             * While the map is following the user's location, the control is in the `following` state,\n             * which changes the style of the control and the circle marker.\n             *\n             * Possible values:\n             *  - false: never updates the map view when location changes.\n             *  - 'once': set the view when the location is first determined\n             *  - 'always': always updates the map view when location changes.\n             *              The map view follows the users location.\n             *  - 'untilPan': (default) like 'always', except stops updating the\n             *                view if the user has manually panned the map.\n             *                The map view follows the users location until she pans.\n             */\n            setView: 'untilPan',\n            /** Keep the current map zoom level when setting the view and only pan. */\n            keepCurrentZoomLevel: false,\n            /** Smooth pan and zoom to the location of the marker. Only works in Leaflet 1.0+. */\n            flyTo: false,\n            /**\n             * The user location can be inside and outside the current view when the user clicks on the\n             * control that is already active. Both cases can be configures separately.\n             * Possible values are:\n             *  - 'setView': zoom and pan to the current location\n             *  - 'stop': stop locating and remove the location marker\n             */\n            clickBehavior: {\n                /** What should happen if the user clicks on the control while the location is within the current view. */\n                inView: 'stop',\n                /** What should happen if the user clicks on the control while the location is outside the current view. */\n                outOfView: 'setView',\n            },\n            /**\n             * If set, save the map bounds just before centering to the user's\n             * location. When control is disabled, set the view back to the\n             * bounds that were saved.\n             */\n            returnToPrevBounds: false,\n            /**\n             * Keep a cache of the location after the user deactivates the control. If set to false, the user has to wait\n             * until the locate API returns a new location before they see where they are again.\n             */\n            cacheLocation: true,\n            /** If set, a circle that shows the location accuracy is drawn. */\n            drawCircle: true,\n            /** If set, the marker at the users' location is drawn. */\n            drawMarker: true,\n            /** The class to be used to create the marker. For example L.CircleMarker or L.Marker */\n            markerClass: L.CircleMarker,\n            /** Accuracy circle style properties. */\n            circleStyle: {\n                color: '#136AEC',\n                fillColor: '#136AEC',\n                fillOpacity: 0.15,\n                weight: 2,\n                opacity: 0.5\n            },\n            /** Inner marker style properties. Only works if your marker class supports `setStyle`. */\n            markerStyle: {\n                color: '#136AEC',\n                fillColor: '#2A93EE',\n                fillOpacity: 0.7,\n                weight: 2,\n                opacity: 0.9,\n                radius: 5\n            },\n            /**\n             * Changes to accuracy circle and inner marker while following.\n             * It is only necessary to provide the properties that should change.\n             */\n            followCircleStyle: {},\n            followMarkerStyle: {\n                // color: '#FFA500',\n                // fillColor: '#FFB000'\n            },\n            /** The CSS class for the icon. For example fa-location-arrow or fa-map-marker */\n            icon: 'fa fa-map-marker',\n            iconLoading: 'fa fa-spinner fa-spin',\n            /** The element to be created for icons. For example span or i */\n            iconElementTag: 'span',\n            /** Padding around the accuracy circle. */\n            circlePadding: [0, 0],\n            /** Use metric units. */\n            metric: true,\n            /** This event is called in case of any location error that is not a time out error. */\n            onLocationError: function(err, control) {\n                alert(err.message);\n            },\n            /**\n             * This even is called when the user's location is outside the bounds set on the map.\n             * The event is called repeatedly when the location changes.\n             */\n            onLocationOutsideMapBounds: function(control) {\n                control.stop();\n                alert(control.options.strings.outsideMapBoundsMsg);\n            },\n            /** Display a pop-up when the user click on the inner marker. */\n            showPopup: true,\n            strings: {\n                title: \"Show me where I am\",\n                metersUnit: \"meters\",\n                feetUnit: \"feet\",\n                popup: \"You are within {distance} {unit} from this point\",\n                outsideMapBoundsMsg: \"You seem located outside the boundaries of the map\"\n            },\n            /** The default options passed to leaflets locate method. */\n            locateOptions: {\n                maxZoom: Infinity,\n                watch: true,  // if you overwrite this, visualization cannot be updated\n                setView: false // have to set this to false because we have to\n                               // do setView manually\n            }\n        },\n\n        initialize: function (options) {\n            // set default options if nothing is set (merge one step deep)\n            for (var i in options) {\n                if (typeof this.options[i] === 'object') {\n                    L.extend(this.options[i], options[i]);\n                } else {\n                    this.options[i] = options[i];\n                }\n            }\n\n            // extend the follow marker style and circle from the normal style\n            this.options.followMarkerStyle = L.extend({}, this.options.markerStyle, this.options.followMarkerStyle);\n            this.options.followCircleStyle = L.extend({}, this.options.circleStyle, this.options.followCircleStyle);\n        },\n\n        /**\n         * Add control to map. Returns the container for the control.\n         */\n        onAdd: function (map) {\n            var container = L.DomUtil.create('div',\n                'leaflet-control-locate leaflet-bar leaflet-control');\n\n            this._layer = this.options.layer || new L.LayerGroup();\n            this._layer.addTo(map);\n            this._event = undefined;\n            this._prevBounds = null;\n\n            this._link = L.DomUtil.create('a', 'leaflet-bar-part leaflet-bar-part-single', container);\n            this._link.title = this.options.strings.title;\n            this._icon = L.DomUtil.create(this.options.iconElementTag, this.options.icon, this._link);\n\n            L.DomEvent\n                .on(this._link, 'click', L.DomEvent.stopPropagation)\n                .on(this._link, 'click', L.DomEvent.preventDefault)\n                .on(this._link, 'click', this._onClick, this)\n                .on(this._link, 'dblclick', L.DomEvent.stopPropagation);\n\n            this._resetVariables();\n\n            this._map.on('unload', this._unload, this);\n\n            return container;\n        },\n\n        /**\n         * This method is called when the user clicks on the control.\n         */\n        _onClick: function() {\n            this._justClicked = true;\n            this._userPanned = false;\n\n            if (this._active && !this._event) {\n                // click while requesting\n                this.stop();\n            } else if (this._active && this._event !== undefined) {\n                var behavior = this._map.getBounds().contains(this._event.latlng) ?\n                    this.options.clickBehavior.inView : this.options.clickBehavior.outOfView;\n                switch (behavior) {\n                    case 'setView':\n                        this.setView();\n                        break;\n                    case 'stop':\n                        this.stop();\n                        if (this.options.returnToPrevBounds) {\n                            var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                            f.bind(this._map)(this._prevBounds);\n                        }\n                        break;\n                }\n            } else {\n                if (this.options.returnToPrevBounds) {\n                  this._prevBounds = this._map.getBounds();\n                }\n                this.start();\n            }\n\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Starts the plugin:\n         * - activates the engine\n         * - draws the marker (if coordinates available)\n         */\n        start: function() {\n            this._activate();\n\n            if (this._event) {\n                this._drawMarker(this._map);\n\n                // if we already have a location but the user clicked on the control\n                if (this.options.setView) {\n                    this.setView();\n                }\n            }\n            this._updateContainerStyle();\n        },\n\n        /**\n         * Stops the plugin:\n         * - deactivates the engine\n         * - reinitializes the button\n         * - removes the marker\n         */\n        stop: function() {\n            this._deactivate();\n\n            this._cleanClasses();\n            this._resetVariables();\n\n            this._removeMarker();\n        },\n\n        /**\n         * This method launches the location engine.\n         * It is called before the marker is updated,\n         * event if it does not mean that the event will be ready.\n         *\n         * Override it if you want to add more functionalities.\n         * It should set the this._active to true and do nothing if\n         * this._active is true.\n         */\n        _activate: function() {\n            if (!this._active) {\n                this._map.locate(this.options.locateOptions);\n                this._active = true;\n\n                // bind event listeners\n                this._map.on('locationfound', this._onLocationFound, this);\n                this._map.on('locationerror', this._onLocationError, this);\n                this._map.on('dragstart', this._onDrag, this);\n            }\n        },\n\n        /**\n         * Called to stop the location engine.\n         *\n         * Override it to shutdown any functionalities you added on start.\n         */\n        _deactivate: function() {\n            this._map.stopLocate();\n            this._active = false;\n\n            if (!this.options.cacheLocation) {\n                this._event = undefined;\n            }\n\n            // unbind event listeners\n            this._map.off('locationfound', this._onLocationFound, this);\n            this._map.off('locationerror', this._onLocationError, this);\n            this._map.off('dragstart', this._onDrag, this);\n        },\n\n        /**\n         * Zoom (unless we should keep the zoom level) and an to the current view.\n         */\n        setView: function() {\n            this._drawMarker();\n            if (this._isOutsideMapBounds()) {\n                this._event = undefined;  // clear the current location so we can get back into the bounds\n                this.options.onLocationOutsideMapBounds(this);\n            } else {\n                if (this.options.keepCurrentZoomLevel) {\n                    var f = this.options.flyTo ? this._map.flyTo : this._map.panTo;\n                    f.bind(this._map)([this._event.latitude, this._event.longitude]);\n                } else {\n                    var f = this.options.flyTo ? this._map.flyToBounds : this._map.fitBounds;\n                    f.bind(this._map)(this._event.bounds, {\n                        padding: this.options.circlePadding,\n                        maxZoom: this.options.locateOptions.maxZoom\n                    });\n                }\n            }\n        },\n\n        /**\n         * Draw the marker and accuracy circle on the map.\n         *\n         * Uses the event retrieved from onLocationFound from the map.\n         */\n        _drawMarker: function() {\n            if (this._event.accuracy === undefined) {\n                this._event.accuracy = 0;\n            }\n\n            var radius = this._event.accuracy;\n            var latlng = this._event.latlng;\n\n            // circle with the radius of the location's accuracy\n            if (this.options.drawCircle) {\n                var style = this._isFollowing() ? this.options.followCircleStyle : this.options.circleStyle;\n\n                if (!this._circle) {\n                    this._circle = L.circle(latlng, radius, style).addTo(this._layer);\n                } else {\n                    this._circle.setLatLng(latlng).setRadius(radius).setStyle(style);\n                }\n            }\n\n            var distance, unit;\n            if (this.options.metric) {\n                distance = radius.toFixed(0);\n                unit =  this.options.strings.metersUnit;\n            } else {\n                distance = (radius * 3.2808399).toFixed(0);\n                unit = this.options.strings.feetUnit;\n            }\n\n            // small inner marker\n            if (this.options.drawMarker) {\n                var mStyle = this._isFollowing() ? this.options.followMarkerStyle : this.options.markerStyle;\n                if (!this._marker) {\n                    this._marker = new this.options.markerClass(latlng, mStyle).addTo(this._layer);\n                } else {\n                    this._marker.setLatLng(latlng);\n                    // If the markerClass can be updated with setStyle, update it.\n                    if (this._marker.setStyle) {\n                        this._marker.setStyle(mStyle);\n                    }\n                }\n            }\n\n            var t = this.options.strings.popup;\n            if (this.options.showPopup && t && this._marker) {\n                this._marker\n                    .bindPopup(L.Util.template(t, {distance: distance, unit: unit}))\n                    ._popup.setLatLng(latlng);\n            }\n        },\n\n        /**\n         * Remove the marker from map.\n         */\n        _removeMarker: function() {\n            this._layer.clearLayers();\n            this._marker = undefined;\n            this._circle = undefined;\n        },\n\n        /**\n         * Unload the plugin and all event listeners.\n         * Kind of the opposite of onAdd.\n         */\n        _unload: function() {\n            this.stop();\n            this._map.off('unload', this._unload, this);\n        },\n\n        /**\n         * Calls deactivate and dispatches an error.\n         */\n        _onLocationError: function(err) {\n            // ignore time out error if the location is watched\n            if (err.code == 3 && this.options.locateOptions.watch) {\n                return;\n            }\n\n            this.stop();\n            this.options.onLocationError(err, this);\n        },\n\n        /**\n         * Stores the received event and updates the marker.\n         */\n        _onLocationFound: function(e) {\n            // no need to do anything if the location has not changed\n            if (this._event &&\n                (this._event.latlng.lat === e.latlng.lat &&\n                 this._event.latlng.lng === e.latlng.lng &&\n                     this._event.accuracy === e.accuracy)) {\n                return;\n            }\n\n            if (!this._active) {\n                // we may have a stray event\n                return;\n            }\n\n            this._event = e;\n\n            this._drawMarker();\n            this._updateContainerStyle();\n\n            switch (this.options.setView) {\n                case 'once':\n                    if (this._justClicked) {\n                        this.setView();\n                    }\n                    break;\n                case 'untilPan':\n                    if (!this._userPanned) {\n                        this.setView();\n                    }\n                    break;\n                case 'always':\n                    this.setView();\n                    break;\n                case false:\n                    // don't set the view\n                    break;\n            }\n\n            this._justClicked = false;\n        },\n\n        /**\n         * When the user drags. Need a separate even so we can bind and unbind even listeners.\n         */\n        _onDrag: function() {\n            // only react to drags once we have a location\n            if (this._event) {\n                this._userPanned = true;\n                this._updateContainerStyle();\n                this._drawMarker();\n            }\n        },\n\n        /**\n         * Compute whether the map is following the user location with pan and zoom.\n         */\n        _isFollowing: function() {\n            if (!this._active) {\n                return false;\n            }\n\n            if (this.options.setView === 'always') {\n                return true;\n            } else if (this.options.setView === 'untilPan') {\n                return !this._userPanned;\n            }\n        },\n\n        /**\n         * Check if location is in map bounds\n         */\n        _isOutsideMapBounds: function() {\n            if (this._event === undefined) {\n                return false;\n            }\n            return this._map.options.maxBounds &&\n                !this._map.options.maxBounds.contains(this._event.latlng);\n        },\n\n        /**\n         * Toggles button class between following and active.\n         */\n        _updateContainerStyle: function() {\n            if (!this._container) {\n                return;\n            }\n\n            if (this._active && !this._event) {\n                // active but don't have a location yet\n                this._setClasses('requesting');\n            } else if (this._isFollowing()) {\n                this._setClasses('following');\n            } else if (this._active) {\n                this._setClasses('active');\n            } else {\n                this._cleanClasses();\n            }\n        },\n\n        /**\n         * Sets the CSS classes for the state.\n         */\n        _setClasses: function(state) {\n            if (state == 'requesting') {\n                L.DomUtil.removeClasses(this._container, \"active following\");\n                L.DomUtil.addClasses(this._container, \"requesting\");\n\n                L.DomUtil.removeClasses(this._icon, this.options.icon);\n                L.DomUtil.addClasses(this._icon, this.options.iconLoading);\n            } else if (state == 'active') {\n                L.DomUtil.removeClasses(this._container, \"requesting following\");\n                L.DomUtil.addClasses(this._container, \"active\");\n\n                L.DomUtil.removeClasses(this._icon, this.options.iconLoading);\n                L.DomUtil.addClasses(this._icon, this.options.icon);\n            } else if (state == 'following') {\n                L.DomUtil.removeClasses(this._container, \"requesting\");\n                L.DomUtil.addClasses(this._container, \"active following\");\n\n                L.DomUtil.removeClasses(this._icon, this.options.iconLoading);\n                L.DomUtil.addClasses(this._icon, this.options.icon);\n            }\n        },\n\n        /**\n         * Removes all classes from button.\n         */\n        _cleanClasses: function() {\n            L.DomUtil.removeClass(this._container, \"requesting\");\n            L.DomUtil.removeClass(this._container, \"active\");\n            L.DomUtil.removeClass(this._container, \"following\");\n\n            L.DomUtil.removeClasses(this._icon, this.options.iconLoading);\n            L.DomUtil.addClasses(this._icon, this.options.icon);\n        },\n\n        /**\n         * Reinitializes state variables.\n         */\n        _resetVariables: function() {\n            // whether locate is active or not\n            this._active = false;\n\n            // true if the control was clicked for the first time\n            // we need this so we can pan and zoom once we have the location\n            this._justClicked = false;\n\n            // true if the user has panned the map after clicking the control\n            this._userPanned = false;\n        }\n    });\n\n    L.control.locate = function (options) {\n        return new L.Control.Locate(options);\n    };\n\n    (function(){\n      // leaflet.js raises bug when trying to addClass / removeClass multiple classes at once\n      // Let's create a wrapper on it which fixes it.\n      var LDomUtilApplyClassesMethod = function(method, element, classNames) {\n        classNames = classNames.split(' ');\n        classNames.forEach(function(className) {\n            L.DomUtil[method].call(this, element, className);\n        });\n      };\n\n      L.DomUtil.addClasses = function(el, names) { LDomUtilApplyClassesMethod('addClass', el, names); };\n      L.DomUtil.removeClasses = function(el, names) { LDomUtilApplyClassesMethod('removeClass', el, names); };\n    })();\n\n    return LocateControl;\n}, window));\n","// (c) 2017 Mapzen\n//\n// MAPZEN SCARAB (aka BUG for US BROADCAST TELEVISION and DOG in the UK)\n// http://en.wikipedia.org/wiki/Digital_on-screen_graphic\n//\n// Identifies full-screen demo pages with Mapzen brand and provides helpful\n// social media links.\n// ----------------------------------------------------------------------------\n/* global module, ga */\nvar MapzenScarab = (function () {\n  'use strict'\n\n  var DEFAULT_LINK = 'https://mapzen.com/'\n  var TRACKING_CATEGORY = 'demo'\n  var ANALYTICS_PROPERTY_ID = 'UA-47035811-1'\n\n  // Globals\n  var opts\n    // opts.name      Name of demo\n    // opts.link      Link to go to\n    // opts.tweet     prewritten tweet\n    // opts.analytics track?\n    // opts.repo      Link to GitHub repository\n    // opts.description Information about map\n\n  var infoDescriptionEl\n\n  function _track (action, label, value, nonInteraction) {\n    if (opts.analytics === false) return false\n\n    if (typeof ga === 'undefined') {\n      return false\n    }\n\n    ga('send', 'event', TRACKING_CATEGORY, action, label, value, nonInteraction)\n  }\n\n  function _loadAnalytics () {\n    /* eslint-disable */\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n    ga('create', ANALYTICS_PROPERTY_ID, 'auto');\n    ga('send', 'pageview');\n    /* eslint-enable */\n  }\n\n  function _popupWindow (url, title, w, h) {\n    // Borrowed from rrssb\n    // Fixes dual-screen position                         Most browsers      Firefox\n    var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screen.left\n    var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screen.top\n\n    var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width\n    var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height\n\n    var left = ((width / 2) - (w / 2)) + dualScreenLeft\n    var top = ((height / 3) - (h / 3)) + dualScreenTop\n\n    var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left)\n\n    // Puts focus on the newWindow\n    if (window.focus) {\n      newWindow.focus()\n    }\n  }\n\n  function _buildTwitterLink () {\n    var base = 'https://twitter.com/intent/tweet'\n    var url = encodeURIComponent(window.location.href)\n    var text\n    var params\n\n    if (opts.tweet) {\n      text = encodeURIComponent(opts.tweet)\n    } else if (opts.name) {\n      text = encodeURIComponent(opts.name + ', powered by @mapzen')\n    } else {\n      text = encodeURIComponent('Check out this project by @mapzen!')\n    }\n\n    params = '?text=' + text + '&url=' + url\n    return base + params\n  }\n\n  function _buildFacebookLink () {\n    var base = 'https://www.facebook.com/sharer/sharer.php?u='\n    var url = encodeURIComponent(window.location.href)\n    return base + url\n  }\n\n  function _createElsAndAppend () {\n    var mapzenLink = opts.link || DEFAULT_LINK\n    var mapzenTitle = (opts.name) ? opts.name + ' · Powered by Mapzen' : 'Powered by Mapzen'\n    var el = document.createElement('div')\n\n    // Create container\n    el.id = 'mz-bug'\n    el.className = 'mz-bug-container'\n    el.setAttribute('role', 'widget')\n\n    // Create buttons\n    var mapzenEl = _createButtonEl('mapzen', mapzenLink, mapzenTitle, _onClickMapzen)\n    var twitterEl = _createButtonEl('twitter', _buildTwitterLink(), 'Share this on Twitter', _onClickTwitter)\n    var facebookEl = _createButtonEl('facebook', _buildFacebookLink(), 'Share this on Facebook', _onClickFacebook)\n\n    // Build DOM\n    el.appendChild(mapzenEl)\n    el.appendChild(twitterEl)\n    el.appendChild(facebookEl)\n\n    // Creating github icon button if needed\n    if (opts.repo) {\n      var githubEl = _createButtonEl('github', opts.repo, 'View source on GitHub', _onClickGitHub)\n      el.appendChild(githubEl)\n    }\n\n    // Creating info button and adding to container only if description is provided\n    if (opts.description) {\n      var infoEl = _createInfoButton('info', _onClickInfo)\n      el.appendChild(infoEl)\n    }\n\n    document.body.appendChild(el)\n    return el\n  }\n\n  function _createInfoButton(id, clickHandler) {\n    var infoButton = document.createElement('div')\n    var infoLogo = document.createElement('div')\n    infoLogo.className = 'mz-bug-' + id + '-logo'\n    infoLogo.addEventListener('click', clickHandler)\n    infoButton.className = 'mz-bug-' + id\n    infoButton.className += ' mz-bug-icons'\n\n    infoButton.appendChild(infoLogo)\n    return infoButton\n  }\n\n  function _createButtonEl (id, linkHref, linkTitle, clickHandler) {\n    var linkEl = document.createElement('a')\n    var logoEl = document.createElement('div')\n\n    logoEl.className = 'mz-bug-' + id + '-logo'\n    linkEl.href = linkHref\n    linkEl.target = '_blank'\n    linkEl.className = 'mz-bug-' + id + '-link'\n    linkEl.className += ' mz-bug-icons'\n    linkEl.title = linkTitle\n    linkEl.addEventListener('click', clickHandler)\n\n    linkEl.appendChild(logoEl)\n    return linkEl\n  }\n\n  function _onClickMapzen (event) {\n    _track('click', 'mapzen logo', opts.name)\n  }\n\n  function _onClickTwitter (event) {\n    event.preventDefault()\n    var link = _buildTwitterLink()\n    _popupWindow(link, 'Twitter', 580, 470)\n    _track('click', 'twitter', opts.name)\n  }\n\n  function _onClickFacebook (event) {\n    event.preventDefault()\n    var link = _buildFacebookLink()\n    _popupWindow(link, 'Facebook', 580, 470)\n    _track('click', 'facebook', opts.name)\n  }\n\n  function _onClickGitHub (event) {\n    _track('click', 'github', opts.name)\n  }\n\n  // Clicking info button should lead to pop up description to open up\n  // Clicking info button again should lead to description box closing\n  // If no description provided, do not open description box\n  function _onClickInfo(event) {\n    var elem = infoDescriptionEl\n    if (elem.style.display === 'block') {\n      elem.style.display = 'none'\n    } else {\n      elem.style.display = 'block'\n    }\n  }\n\n  function _buildDescription(id, container) {\n    var infoBox = document.createElement('div')\n    infoBox.className = \"mz-bug-\" + id\n    infoBox.textContent = opts.description \n    infoBox.style.width = container.offsetWidth + 'px'\n    infoBox.style.marginLeft = container.style.marginLeft\n\n    document.body.appendChild(infoBox)\n    return infoBox\n  }\n\n  function resizeDescription(container) {\n    var containerWidth = container.offsetWidth \n    infoDescriptionEl.style.width = containerWidth + 'px'\n    infoDescriptionEl.style.marginLeft = container.style.marginLeft\n  }\n\n  function centerScarab(container) {\n    var containerWidth = container.offsetWidth\n    var offsetMargin = -1 * containerWidth / 2\n    container.style.marginLeft = offsetMargin + 'px'\n  }\n\n  var MapzenScarab = function (options) {\n    // nifty JS constructor pattern via browserify documentation\n    // https://github.com/substack/browserify-handbook#reusable-components\n    if (!(this instanceof MapzenScarab)) return new MapzenScarab(options)\n\n    // If iframed, exit & do nothing.\n    if (window.self !== window.top) {\n      return false\n    }\n\n    this.setOptions(options)\n\n    this.el = _createElsAndAppend()\n    this.twitterEl = this.el.querySelector('.mz-bug-twitter-link')\n    this.facebookEl = this.el.querySelector('.mz-bug-facebook-link')\n\n    centerScarab(this.el);\n    window.addEventListener('resize', function(event) {\n      centerScarab(this.el)\n    }.bind(this))\n\n    // Build links\n    this.rebuildLinks()\n    // Rebuild links if hash changes\n    window.onhashchange = function () {\n      this.rebuildLinks()\n    }.bind(this)\n\n    if (opts.description) {\n      infoDescriptionEl = _buildDescription('description', this.el)\n      window.addEventListener('resize', function(event) {\n        resizeDescription(this.el)\n      }.bind(this))\n    }\n\n    // Check if Google Analytics is present soon in the future; if not, load it.\n    window.setTimeout(function () {\n      if (typeof ga === 'undefined') {\n        _loadAnalytics()\n        _track('analytics', 'fallback', null, true)\n      }\n\n      _track('bug', 'active', opts.name, true)\n    }, 0)\n  }\n\n  MapzenScarab.prototype.rebuildLinks = function () {\n    this.twitterEl.href = _buildTwitterLink()\n    this.facebookEl.href = _buildFacebookLink()\n  }\n\n  MapzenScarab.prototype.hide = function () {\n    this.el.style.display = 'none'\n  }\n\n  MapzenScarab.prototype.show = function () {\n    this.el.style.display = 'block'\n  }\n\n  MapzenScarab.prototype.setOptions = function (options) {\n    // Default options\n    opts = opts || {\n      analytics: true,\n      name: null\n    }\n\n    // Copy options values\n    if (typeof options === 'object') {\n      for (var i in options) {\n        opts[i] = options[i]\n      }\n    }\n\n    this.opts = opts\n  }\n\n  return MapzenScarab\n}())\n\n// Export as browserify module if present, otherwise, it is global to window\nif (typeof module === 'object' && typeof module.exports === 'object') {\n  module.exports = MapzenScarab\n} else {\n  window.MapzenScarab = MapzenScarab\n}\n","// (c) 2015 Mapzen\n//\n// MAP UI · GEOLOCATOR v2\n//\n// \"Locate me\" button for demos\n// ----------------------------------------------------------------------------\nmodule.exports = {\n  init: function (options, map) {\n    /* global map */\n    'use strict'\n\n    // Handle `options` parameter\n    // If `options` is undefined, make it an empty object\n    // If `options` is boolean, set options.show property\n    // This allows for future syntax where options is an object\n    if (options === true) {\n      options = {\n        show: true\n      }\n    } else if (options === false) {\n      options = {\n        show: false\n      }\n    } else if (typeof options === 'undefined') {\n      options = {}\n    }\n\n    // Exit if demo is iframed & not forced to be turned on\n    if (window.self !== window.top && options.show !== true) return false\n\n    // Exit if forced to be turned off\n    if (options.show === false) return false\n\n    require('leaflet.locatecontrol')\n\n    // Geolocator\n    var locator = L.control.locate({\n      drawCircle: false,\n      follow: false,\n      showPopup: false,\n      drawMarker: false,\n      markerStyle: {\n        opacity: 0,\n      },\n      strings: {\n        title: 'Get current location'\n      },\n      icon: 'mz-geolocator-icon',\n      // We piggy back on geocoder plugin styles and use their load icon so it is the same.\n      // Re-using the class name means we don't duplicate the embedded image style in the compiled bundle.\n      iconLoading: 'mz-geolocator-icon mz-geolocator-active leaflet-pelias-search-icon leaflet-pelias-loading'\n    }).addTo(map)\n\n    // Re-sort control order so that locator is on top\n    // locator._container is a reference to the locator's DOM element.\n    locator._container.parentNode.insertBefore(locator._container, locator._container.parentNode.childNodes[0])\n  }\n}\n","// (c) 2015 Mapzen\n//\n// MAP UI · MAPZEN SEARCH\n//\n// ----------------------------------------------------------------------------\nmodule.exports = {\n  init: function (options, map) {\n    /* global map */\n    'use strict'\n\n    // Handle `options` parameter\n    // If `options` is undefined, make it an empty object\n    // If `options` is boolean, set options.show property\n    // This allows for future syntax where options is an object\n    if (options === true) {\n      options = {\n        show: true\n      }\n    } else if (options === false) {\n      options = {\n        show: false\n      }\n    } else if (typeof options === 'undefined') {\n      options = {}\n    }\n\n    // Exit if demo is iframed & not forced to be turned on\n    if (window.self !== window.top && options.show !== true) return false\n\n    // Exit if forced to be turned off\n    if (options.show === false) return false\n\n    require('leaflet-geocoder-mapzen')\n\n    var DEMO_API_KEY = 'search-PFZ8iFx'\n\n    var geocoderOptions = {\n      expanded: true,\n      layers: ['coarse'],\n      placeholder: 'Search for city',\n      title: 'Search for city',\n      pointIcon: false,\n      polygonIcon: false,\n      markers: false,\n      params: {\n        // TODO: remove geonames after WOF incorporates cities & Pelias includes alt-name search\n        sources: 'wof,gn'\n      }\n    }\n\n    var geocoder = L.control.geocoder(DEMO_API_KEY, geocoderOptions).addTo(map)\n\n    // Re-sort control order so that geocoder is on top\n    // geocoder._container is a reference to the geocoder's DOM element.\n    geocoder._container.parentNode.insertBefore(geocoder._container, geocoder._container.parentNode.childNodes[0])\n\n    // Handle when viewport is smaller\n    window.addEventListener('resize', checkResize)\n    checkResize() // Check on load\n\n    var isListening = false\n    var previousWidth = getViewportWidth()\n\n    function getViewportWidth () {\n      return window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width\n    }\n\n    function checkResize (event) {\n      var width = getViewportWidth()\n\n      // don't do anything if the WIDTH has not changed.\n      if (width === previousWidth) return\n\n      if (width < 900) {\n        // Do these checks to make sure collapse / expand events don't fire continuously\n        if (L.DomUtil.hasClass(geocoder._container, 'leaflet-pelias-expanded')) {\n          geocoder.collapse()\n          map.off('mousedown', geocoder.collapse.bind(geocoder))\n          isListening = false\n        }\n      } else {\n        if (!L.DomUtil.hasClass(geocoder._container, 'leaflet-pelias-expanded')) {\n          geocoder.expand()\n          // Make sure only one of these are listening\n          if (isListening === false) {\n            map.on('mousedown', geocoder.collapse.bind(geocoder))\n            isListening = true\n          }\n        }\n      }\n\n      previousWidth = width\n    }\n\n    geocoder.on('expand', function (event) {\n      if (isListening === false) {\n        map.on('mousedown', geocoder.collapse.bind(geocoder))\n        isListening = true\n      }\n    })\n  }\n}\n","// (c) 2015 Mapzen\n//\n// UTILS · IFRAMED ANCHOR TARGETS\n//\n// Bottom line is, don’t use target=\"_blank\" in anchors.\n// Read more: https://css-tricks.com/use-target_blank/\n//\n// If you’re in an iframe, though, you may not want links to open within the\n// frame. The following code snippet will add target=\"_top\" to all links that\n// do not have an explicit target attribute. You may force target=\"_blank\" to\n// be target=\"_top\" by passing an optional parameter of \"true\".\n//\n// Recommended use: run this function in a check for iframed status, e.g.\n//     if (window.self !== window.top) anchorTargets(true)\n//\n// If this is being run with Leaflet, run this after the map is initialized\n// to make sure all attribution links open in the parent tab / window.\n// ----------------------------------------------------------------------------\nmodule.exports = function (force) {\n  'use strict'\n\n  var anchors = document.querySelectorAll('a')\n\n  for (var i = 0, j = anchors.length; i < j; i++) {\n    var el = anchors[i]\n\n    // Only set target when not explicitly specified\n    // to avoid overwriting intentional targeting behavior\n    // Unless the force parameter is true, then targets of\n    // '_blank' are forced to to be '_top'\n    if (!el.target || (force === true && el.target === '_blank')) {\n      el.target = '_top'\n    }\n  }\n}\n","// (c) 2015 Mapzen\n//\n// MAP UI · CONDITIONALLY DISPLAYED ZOOM BUTTONS\n//\n//                     · A POEM ·\n//\n// Where there is a map,\n// On touch-enabled devices\n//\n// The zoom controls are unnecessary -\n//                They clutter the UI.\n//\n// Therefore,\n// They should be disabled.\n//\n//                     ·  FIN  ·\n//\n// Additional notes:\n//  - We don’t need to care whether zoom is enabled or not on the map.\n//  - It doesn’t matter what the viewport / device dimensions are.\n//  - Touch detection is flaky. See this discussion:\n//    http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n//    That said, we’ll attempt to capture more frequent\n//    use cases and leave zoom buttons in place otherwise.\n// ----------------------------------------------------------------------------\n/* global Modernizr, map */\n\nvar DEBUG = true\n\nfunction debug (message) {\n  if (DEBUG === true) {\n    console.log('MPZN ZoomControl: ' + message)\n  }\n}\n\nmodule.exports = function () {\n  'use strict'\n\n  // Assumes a global `map` object\n  // TODO: Ask for object explicitly\n  var mapRef = map || null\n  var isProbablyTouchscreen\n\n  debug('Conditional zoom control active.')\n\n  // Are we in a touch-screen environment?\n  // Check if Modernizr is present and detecting touch\n  // Modernizr might be present, but not performing a touch test, so do our own sniff test also\n  // TODO: Require Modernizr?\n  if ((typeof Modernizr === 'object' && Modernizr.hasOwnProperty('touch') && Modernizr.touch === true) || 'ontouchstart' in window) {\n    isProbablyTouchscreen = true\n  }\n\n  // Overrides the zoom container element display style\n  // TODO: Provide functionality for other map libraries\n  if (isProbablyTouchscreen === true) {\n    debug('Touchscreen detected.')\n    // Double check that it is Leaflet\n    if (typeof mapRef === 'object' && mapRef.hasOwnProperty('_leaflet_id')) {\n      debug('Leaflet detected, hiding zoom control.')\n      mapRef.zoomControl._container.style.display = 'none'\n    }\n  } else {\n    debug('No touchscreen detected, exiting.')\n  }\n}\n","// (c) 2015-2016 Mapzen\n//\n// MAPZEN UI BUNDLE\n//\n// Requires everything via browserify\n// ----------------------------------------------------------------------------\n/* global require, module */\n'use strict'\n\nvar Bug = require('mapzen-scarab')\nvar search = require('./components/search/search')\nvar geolocator = require('./components/geolocator/geolocator')\nvar zoomControl = require('./components/utils/zoom-control')\nvar anchorTargets = require('./components/utils/anchor-targets')\n\n// To avoid making an external request for styles (which results in an ugly\n// Flash of Unstyled Content) we're going to inline all the styles into\n// this JS file. This is done by taking the minified, concatenated CSS and\n// inserting it via mustache in this variable here:\nvar css = '{{{ cssText }}}'\n\n// Loads stylesheet for the bug.\n// Ensures that it is placed before other defined stylesheets or style\n// blocks in the head, so that custom styles are allowed to override\nfunction insertStylesheet (cssText) {\n  var firstStylesheet = document.head.querySelectorAll('link, style')[0]\n  var styleEl = document.createElement('style')\n\n  styleEl.type = 'text/css'\n\n  if (styleEl.styleSheet){\n    styleEl.styleSheet.cssText = css\n  } else {\n    styleEl.appendChild(document.createTextNode(css))\n  }\n\n  if (firstStylesheet !== 'undefined') {\n    document.head.insertBefore(styleEl, firstStylesheet)\n  } else {\n    document.head.appendChild(styleEl)\n  }\n}\n\ninsertStylesheet(css)\n\n// Export\nmodule.exports = (function () {\n  var MPZN = {\n    // Reference for legacy\n    citysearch: search,\n    geolocator: geolocator,\n    Utils: {\n      anchorTargets: anchorTargets,\n      zoomControl: zoomControl,\n    }\n  }\n\n  MPZN.bug = function (options) {\n    options = options || {}\n    var bug = Bug(options)\n\n    var leafletMap\n\n    // What is the leaflet Map object? You can pass it in as an option, or look for it\n    // on window.map and see if it a Leaflet instance\n    if (options.map) {\n      leafletMap = options.map\n    } else if (window.map && window.map._container && window.map._container instanceof HTMLElement) {\n      leafletMap = window.map\n    }\n\n    // if leaflet, move the bug element into its .leaflet-control-container\n    if (leafletMap && bug.el && bug.el instanceof HTMLElement) {\n      leafletMap._container.querySelector('.leaflet-control-container').appendChild(bug.el)\n    }\n\n    // Sorted by reverse order\n    geolocator.init(options.locate, leafletMap)\n    search.init(options.search, leafletMap)\n  }\n\n  // Do stuff\n  MPZN.Utils.zoomControl()\n\n  // Only operate if iframed\n  if (window.self !== window.top) {\n    MPZN.Utils.anchorTargets()\n  }\n\n  // Expose for external access\n  window.MPZN = MPZN\n\n  return MPZN\n})()\n"]}